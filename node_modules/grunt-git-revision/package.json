{
  "name": "grunt-git-revision",
  "description": "Get current Git revision",
  "version": "0.0.1",
  "homepage": "https://github.com/unfold/grunt-git-revision",
  "author": {
    "name": "Simen Brekken",
    "email": "simen@unfold.no"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/unfold/grunt-git-revision.git"
  },
  "bugs": {
    "url": "https://github.com/unfold/grunt-git-revision/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/unfold/grunt-git-revision/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-git-revision\n\n> Get current Git revision\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-git-revision --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-git-revision');\n```\n\n## The \"revision\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `revision` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  revision: {\n    options: {\n      property: 'meta.revision',\n      ref: 'HEAD',\n      short: true\n    }\n  },\n})\n```\n\n### Options\n\n#### options.property\nType: `String`\nDefault value: `'meta.revision'`\n\nWhat configuration property to write the revision to.\n\n#### options.ref\nType: `String`\nDefault value: `'HEAD'`\n\nWhat ref to read the revision from.\n\n#### options.short\nType: `Boolean`\nDefault value: `true`\n\nFetch short revision (e.g 5b8348d) or the full revision (5b8348de6b492ca79e732b1902c489332c8d64fb)\n\n### Usage Examples\n\n```js\ngrunt.initConfig({\n  preprocess: {\n    options: {\n      context: {\n        revision: '<%= meta.revision %>'\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-git-revision@0.0.1",
  "dist": {
    "shasum": "e7915342946e440211c5be33c2c9b7ea290b3812",
    "tarball": "http://registry.npmjs.org/grunt-git-revision/-/grunt-git-revision-0.0.1.tgz"
  },
  "_from": "grunt-git-revision@0.0.1",
  "_npmVersion": "1.3.11",
  "_npmUser": {
    "name": "unfold",
    "email": "github@unfold.no"
  },
  "maintainers": [
    {
      "name": "unfold",
      "email": "github@unfold.no"
    }
  ],
  "directories": {},
  "_shasum": "e7915342946e440211c5be33c2c9b7ea290b3812",
  "_resolved": "https://registry.npmjs.org/grunt-git-revision/-/grunt-git-revision-0.0.1.tgz"
}
